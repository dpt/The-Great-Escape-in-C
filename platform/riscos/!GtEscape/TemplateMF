# Project:		TGE:

# Tools

asm_			= objasm
cc_			= cc
cdir			= cdir
every_			= every.every2
link_			= link
wipe			= $(suppress) wipe
suppress		= x

# Tool flags:

asmflags		= $(depend) $(throwback)
ccflags			= -c90 -fah -Wh -Otime -c $(cpu) $(depend) $(throwback) $(includes) $(ccextra)
#ccflags_memcheck	= -c90 -fah -Wh -Otime -c $(cpu) $(depend) $(throwback) $(includes) $(ccextra) -zpc1 -DMemCheck_MEMCHECK -jMemCheck:ANSI.,:mem -fw
everyflags     	 	= -c
linkflags		= -c++
wipeflags		= ~CFR~V

# Combined tools and flags

asm			= $(asm_) $(asmflags)
cc			= $(cc_) $(ccflags)
cc_memcheck		= $(cc_) $(ccflags_memcheck)
every			= $(every_) $(everyflags)
link			= $(link_) $(linkflags)

# Tool flags (specific cases)

defines			=

# Compiler options

cpu			= -apcs 3/32bit/fpe2/swstackcheck/fp/nofpregargs -arch 2 -cpu XScale
depend			= -depend !Depend
throwback		= -throwback

# Library references

includes		= -I^.^.^.include -I^.^.^.libraries.ZXSpectrum.include -I^.^.^.libraries.TheGreatEscape.include -jStubsG_C: -ICLibs: -IOSLib:

lib_normal		= CLibs:appengine.o.AOFLib
lib_debug		= CLibs:appengine.odf.AOFLib
lib_fortify       	= CLibs:fortify.o.libfortify
#lib_memcheck       	= MemCheck:o.MC
lib_all			= OSLib:o.OSLib32 StubsG_C:o.flexlib StubsG_C:o.StubsGS

libraries_normal	= $(lib_normal) $(lib_all)
libraries_debug_fortify	= $(lib_debug) $(lib_fortify) $(lib_all)
libraries_memcheck	= $(lib_debug) $(lib_memcheck) $(lib_all)

# Generated files

# The number of objects involved causes path buffers to overflow, so here we
# use a via file.

# These paths need to point at appengine and !gtescape only. (it finds too much atm)

objs_normal  = \
#Makatic{ -V objs-normal
-F
-ff "^.^.^...c.*  -x ..test...*" "\t\t\t*2.o.#0 \\\n"
#Makatic}

objs_debug = \
#Makatic{ -V objs-debug
-F
-ff "^.^.^...c.*  -x ..test...*" "\t\t\t*2.odf.#0 \\\n"
#Makatic}

objs_memcheck = \
#Makatic{ -V objs-memcheck
-F
-ff "^.^.^...c.*  -x ..test...*" "\t\t\t*2.omc.#0 \\\n"
#Makatic}

# Targets:

!RunImage:		$(objs_normal) $(libraries_normal)
			$(link) -o $@ $(libraries_normal) -via objs-normal

!RunImageDF:		$(objs_debug) $(libraries_debug_fortify)
			$(link) -d -o $@ $(libraries_debug_fortify) -via objs-debug

!RunImageMC:		$(objs_memcheck) $(libraries_memcheck)
			$(link) -d -o $@ $(libraries_memcheck) -via objs-memcheck

normal:			!RunImage
			@echo 'normal' built

debug:			!RunImageDF
			@echo 'debug' built

memcheck:		!RunImageMC
			@echo 'memcheck' built

# deliberately not including memcheck in 'all'
all:			debug normal
			@echo 'all' built

clean:;			$(every) "^.^.^...o ^.^.^...odf ^.^.^...omc" -d "$(wipe) %0 $(wipeflags)"
                        $(every) "@.!RunImage* @.Makefile @.objs-*" -f "$(wipe) %0 $(wipeflags)"
			@echo Cleaned

# Rule Patterns

.SUFFIXES:		.o .odf .omc

.s.o:;			$(asm) -from $< -to $@
.c.o:;			$(cc) -ff -DNDEBUG $(defines) -o $@ $<

.s.odf:;		$(asm) -from $< -to $@ -g
.c.odf:;		$(cc) -fn -g -DFORTIFY $(defines) -o $@ $<

.s.omc:;		$(asm) -from $< -to $@ -g
.c.omc:;		$(cc_memcheck) -fn -g $(defines) -o $@ $<

# User-editable dependencies:

# Static dependencies:

# Dynamic dependencies:
