The Great Escape - Help for v0.95 (Apr 2022)
============================================
This is The Great Escape application. It is a
classic isometric ZX Spectrum game, originally
from 1986, ported to RISC OS.

The game has been reverse engineered for the
purposes of education from its original format.
The game assets and Z80 machine language logic was
painstakingly decoded and reimplemented as
portable C code. Finally, it was rebuilt for the
RISC OS desktop.

Compatibility
-------------
* RISC OS 3.1 or later.
* ARM250 or better.

Requirements
------------
The Great Escape is built using the GCCSDK
toolchain. It requires the modules CallASWI 0.03
and SharedCLibrary 5.17 or greater to be available
in your !System.

If you don't have them installed you can obtain a
copy from RISC OS Open Ltd's 'System resources'
package which is available here:
https://www.riscosopen.org/content/downloads/common

How To Play
-----------
For the full instructions launch the game and
choose 'Instructions' from the icon bar menu.

Sound Support
-------------
The Great Escape can play its menu screen music
and in-game sound effects if your RISC OS computer
has 16-bit audio support. However, the
SharedSoundBuffer module I use to play the sound
requires SharedSound 1.07, or later, which seems
to only exist for relatively recent versions of
RISC OS...

The package in which the game is supplied contains
the required modules in the top-level 'System'
directory. If you installed the game using RiscPkg
then these will have been be automatically
installed. Otherwise you will need to install
these SharedSoundBuffer modules into your !System.

Future versions of the game may rewrite the sound
support to make it work on Archimedes class
hardware.

Save Games
----------
The 'GtEscape' format save games are a text format
file containing the complete saved state of the
game. You can alter save games to cheat, produce
odd effects, etc. It's like using POKEs, but at a
more descriptive level.

Note that altering the game state in this way can
easily cause the game to go haywire.

### Example: Gaining Items

Set `items_held` to the numbers of the items you
want, e.g. 7 and 8 for the food and the poison.

### Example: Becoming a Dog

Look at the first `vischar` entry and set its
`mi.sprite` to 14 (this selects the dog sprite
set) and its `mappos.w` to 8 (this adjusts the
player's height).

Full Screen Mode
----------------
When you enter full screen mode the computer's
screen modes are enumerated to find the best match
for a ZX Spectrum style 256x192 resolution. If for
whatever reason this produces a poor result on
your computer you can set the system variable
`GtEscape$ScreenMode` to the number of your
preferred screen mode to override the automatic
full screen mode selection.

Multiple Games
--------------
You can start up multiple games in this version by
repeatedly clicking on the icon bar icon. I've
left this enabled in this build out of interest,
and to demonstrate that multiple running games
will not interfere with each other.

In practice, due to the structure of the original
game, and RISC OS's lack of threading, multiple
concurrent running games will not currently
cooperate in a smooth manner. The games can be
played, but will be choppy.

TODOs / Missing Features
------------------------
* Pre-Risc PC sound support
* Joystick support

Copyright
---------
Denton Designs developed the original game and it
was published by Ocean Software. Since this is a
reverse engineered game some thirty-odd years old
it's not possible for someone doing this as a
hobby (for the purposes of preservation and
education) to determine the legal owners of the
game.

While I claim no copyright over the original game
logic and assets of the game, I do claim copyright
over the parts unique to this reimplementation.

Credits
-------
Denton Designs:
Designed by John Heap, Ally Noble
Programmed by John Heap
Graphics by Ally Noble

Ocean:
Cover Illustration by Bob Wakelin
Produced by D. C. Ward

Acknowledgements
----------------
Thanks to David Ruck for TimerMod.
Thanks to John Duffell for SharedSoundBuffer.
Thanks to Justin Fletcher for StubsG.
Thanks to Richard Dymond for SkoolKit.

Background
-----------
Original game disassembly:
http://dpt.github.io/The-Great-Escape/

Disassembly project:
https://github.com/dpt/The-Great-Escape/

Porting the game to C project:
https://github.com/dpt/The-Great-Escape-in-C/

Project write-up:
http://www.davespace.co.uk/the.great.escape/

Changelog
---------
v0.90 (Apr 2020) - First beta test release
v0.91 (Apr 2020) - Fixed spawning issues
v0.92 (May 2020) - Added screenshot saving
                 - Added sound on 16-bit hardware
v0.93 (Nov 2021) - Added save games
v0.94 (Feb 2021) - Rebuilt using GCCSDK
v0.95 (Apr 2022) - Added full screen mode
                 - RiscPkg'd

Contact
-------
dave@davespace.co.uk
http://www.davespace.co.uk/


// vim: tw=50 et
